#!/bin/sh
# Main uDOS CLI - unified entry point for all uDOS functionality
# Compatible with both sh and bash

VERSION="1.0.0"
UDOS_HOME="${HOME}/.udos"
UDOS_SYSTEM="/usr/local/share/udos"

# Check if we have bash, if not try to install it
if ! command -v bash >/dev/null 2>&1; then
    if command -v tce-load >/dev/null 2>&1; then
        echo "Installing bash for full compatibility..."
        tce-load -wi bash >/dev/null 2>&1 || true
    fi
fi

# Use bash if available, otherwise stick with sh
if command -v bash >/dev/null 2>&1; then
    # Re-execute with bash if we're still in sh
    if [ -z "$BASH_VERSION" ]; then
        exec bash "$0" "$@"
    fi
fi

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Logging
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') [udos] $1" >> "${UDOS_HOME}/logs/udos.log"
}

# Initialize uDOS structure
init_udos() {
    echo -e "${BLUE}üöÄ Initializing uDOS environment...${NC}"
    
    # Create directory structure
    mkdir -p "${UDOS_HOME}"/{vars,data,templates,logs,scripts}
    
    # Copy system templates if they don't exist
    if [ -d "${UDOS_SYSTEM}/templates" ] && [ ! -f "${UDOS_HOME}/templates/.initialized" ]; then
        cp -r "${UDOS_SYSTEM}/templates/"* "${UDOS_HOME}/templates/" 2>/dev/null || true
        touch "${UDOS_HOME}/templates/.initialized"
    fi
    
    # Create default config
    cat > "${UDOS_HOME}/vars/config.env" << EOF
# uDOS User Configuration
UDOS_VERSION=${VERSION}
UDOS_GRID_SIZE=16
UDOS_PALETTE=retro8
UDOS_EDITOR=micro
UDOS_VIEWER=glow
USER_ROLE=${USER}
INITIALIZED=$(date)
EOF
    
    log "uDOS initialized for user ${USER}"
    echo -e "${GREEN}‚úÖ uDOS initialized at ${UDOS_HOME}${NC}"
    echo -e "${YELLOW}üí° Try: udos var list, udos tpl list, udos data list${NC}"
}

# Show system information
show_info() {
    echo -e "${BLUE}üìä uDOS System Information${NC}"
    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
    echo "Version: ${VERSION}"
    echo "User: ${USER} ($(id -u))"
    echo "Home: ${UDOS_HOME}"
    echo "System: ${UDOS_SYSTEM}"
    
    if [ -f "${UDOS_HOME}/vars/config.env" ]; then
        source "${UDOS_HOME}/vars/config.env"
        echo "Grid: ${UDOS_GRID_SIZE}√ó${UDOS_GRID_SIZE}"
        echo "Palette: ${UDOS_PALETTE}"
        echo "Editor: ${UDOS_EDITOR}"
    fi
    
    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
    echo "Storage Usage:"
    du -sh "${UDOS_HOME}"/* 2>/dev/null | sed 's/^/  /'
}

# Clean up logs and cache
clean_udos() {
    echo -e "${YELLOW}üßπ Cleaning uDOS cache and logs...${NC}"
    
    # Clean old logs (keep last 7 days)
    find "${UDOS_HOME}/logs" -name "*.log" -mtime +7 -delete 2>/dev/null || true
    
    # Clean temporary data
    rm -rf "${UDOS_HOME}/data/.tmp" 2>/dev/null || true
    
    # Compress old data
    find "${UDOS_HOME}/data" -name "*.json" -mtime +30 -exec gzip {} \; 2>/dev/null || true
    
    log "Cleanup completed"
    echo -e "${GREEN}‚úÖ Cleanup completed${NC}"
}

# Main command dispatcher
case "$1" in
    var|variable)
        shift
        uvar "$@"
        ;;
    data)
        shift
        udata "$@"
        ;;
    tpl|template)
        shift
        utpl "$@"
        ;;
    init|setup)
        init_udos
        ;;
    info|status)
        show_info
        ;;
    clean|cleanup)
        clean_udos
        ;;
    help|--help|-h)
        echo -e "${BLUE}uDOS v${VERSION} - Universal Device Operating System${NC}"
        echo ""
        echo "Commands:"
        echo "  init          Initialize uDOS environment"
        echo "  var           Variable management (uvar)"
        echo "  data          Data layer operations (udata)"
        echo "  tpl           Template management (utpl)"
        echo "  info          Show system information"
        echo "  clean         Clean logs and cache"
        echo "  help          Show this help"
        echo ""
        echo "Examples:"
        echo "  udos init"
        echo "  udos var set EDITOR=micro"
        echo "  udos tpl create document.md"
        echo "  udos data save notes.json"
        ;;
    version|--version|-v)
        echo "uDOS ${VERSION}"
        ;;
    *)
        if [ -z "$1" ]; then
            echo -e "${BLUE}uDOS v${VERSION}${NC} - Type 'udos help' for commands"
        else
            echo -e "${RED}‚ùå Unknown command: $1${NC}"
            echo "Type 'udos help' for available commands"
            exit 1
        fi
        ;;
esac
